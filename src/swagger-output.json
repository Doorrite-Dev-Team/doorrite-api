{
  "openapi": "3.1.0",
  "info": {
    "title": "Doorrite API",
    "description": "All API endpoints for the Doorrite food delivery system.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:4000",
      "description": "Local development server"
    },
    {
      "url": "https://doorrite-api.onrender.com",
      "description": "Production server"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authentication endpoints"
    },
    {
      "name": "User",
      "description": "Customer endpoints"
    },
    {
      "name": "Vendor",
      "description": "Vendor endpoints"
    },
    {
      "name": "Product",
      "description": "Product endpoints"
    },
    {
      "name": "Order",
      "description": "Order endpoints"
    },
    {
      "name": "Admin",
      "description": "Administration endpoints"
    },
    {
      "name": "Rider",
      "description": "Rider endpoints"
    },
    {
      "name": "Payment",
      "description": "Payment endpoints"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/docs-json": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/auth/create-user": {
      "post": {
        "tags": ["Auth", "Auth User"],
        "summary": "Create a new user",
        "description": "Register a new user account",
        "responses": {
          "default": {
            "description": ""
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fullName": {
                    "example": "any"
                  },
                  "email": {
                    "example": "any"
                  },
                  "phoneNumber": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/create-otp": {
      "post": {
        "tags": ["Auth", "Auth User"],
        "summary": "Create OTP",
        "description": "Send a one-time password to the user",
        "responses": {
          "default": {
            "description": ""
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/verify-otp": {
      "post": {
        "tags": ["Auth", "Auth User"],
        "summary": "Verify OTP",
        "description": "Verify the one-time password",
        "responses": {
          "default": {
            "description": ""
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "example": "any"
                  },
                  "otp": {
                    "example": "any"
                  },
                  "purpose": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/login-user": {
      "post": {
        "tags": ["Auth", "Auth User"],
        "summary": "User login",
        "description": "Authenticate and receive a JWT",
        "responses": {
          "default": {
            "description": ""
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "identifier": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/refresh-token": {
      "post": {
        "tags": ["Auth", "Auth User"],
        "summary": "Refresh token",
        "description": "Obtain a new JWT using a refresh token",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/auth/logout-user": {
      "get": {
        "tags": ["Auth", "Auth User"],
        "summary": "User logout",
        "description": "Log out the currently authenticated user",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/auth/forget-password": {
      "post": {
        "tags": ["Auth", "Auth User"],
        "summary": "Forgot password",
        "description": "Initiate the password reset process",
        "responses": {
          "default": {
            "description": ""
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/reset-password": {
      "post": {
        "tags": ["Auth", "Auth User"],
        "summary": "Reset password",
        "description": "Reset the user password with a valid token",
        "responses": {
          "default": {
            "description": ""
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  },
                  "confirmPassword": {
                    "example": "any"
                  },
                  "resetToken": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/create-vendor": {
      "post": {
        "tags": ["Auth", "Auth Vendor"],
        "summary": "Create a new vendor",
        "description": "Register a new vendor account",
        "responses": {
          "default": {
            "description": ""
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "businessName": {
                    "example": "any"
                  },
                  "email": {
                    "example": "any"
                  },
                  "phoneNumber": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  },
                  "address": {
                    "example": "any"
                  },
                  "categoryIds": {
                    "example": "any"
                  },
                  "logoUrl": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/create-vendor-otp": {
      "post": {
        "tags": ["Auth", "Auth Vendor"],
        "summary": "Create vendor OTP",
        "description": "Send a one-time password to the vendor",
        "responses": {
          "default": {
            "description": ""
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/verify-vendor-otp": {
      "post": {
        "tags": ["Auth", "Auth Vendor"],
        "summary": "Verify vendor OTP",
        "description": "Verify the one-time password for the vendor",
        "responses": {
          "default": {
            "description": ""
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "example": "any"
                  },
                  "otp": {
                    "example": "any"
                  },
                  "purpose": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/login-vendor": {
      "post": {
        "tags": ["Auth", "Auth Vendor"],
        "summary": "Vendor login",
        "description": "Authenticate and receive a JWT for the vendor",
        "responses": {
          "default": {
            "description": ""
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "identifier": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/refresh-vendor-token": {
      "post": {
        "tags": ["Auth", "Auth Vendor"],
        "summary": "Refresh vendor token",
        "description": "Obtain a new JWT for the vendor using a refresh token",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/auth/logout-vendor": {
      "get": {
        "tags": ["Auth", "Auth Vendor"],
        "summary": "Vendor logout",
        "description": "Log out the currently authenticated vendor",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/auth/forget-vendor-password": {
      "post": {
        "tags": ["Auth", "Auth Vendor"],
        "summary": "Forgot vendor password",
        "description": "Initiate the password reset process for the vendor",
        "responses": {
          "default": {
            "description": ""
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/reset-vendor-password": {
      "post": {
        "tags": ["Auth", "Auth Vendor"],
        "summary": "Reset vendor password",
        "description": "Reset the vendor password with a valid token",
        "responses": {
          "default": {
            "description": ""
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  },
                  "confirmPassword": {
                    "example": "any"
                  },
                  "resetToken": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/create-rider": {
      "post": {
        "tags": ["Auth", "Auth Rider"],
        "summary": "Create a new rider",
        "description": "Register a new rider account",
        "responses": {
          "default": {
            "description": ""
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "vehicleType": {
                    "example": "any"
                  },
                  "fullName": {
                    "example": "any"
                  },
                  "email": {
                    "example": "any"
                  },
                  "phoneNumber": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/create-rider-otp": {
      "post": {
        "tags": ["Auth", "Auth Rider"],
        "summary": "Create rider OTP",
        "description": "Send a one-time password to the rider",
        "responses": {
          "default": {
            "description": ""
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/verify-rider-otp": {
      "post": {
        "tags": ["Auth", "Auth Rider"],
        "summary": "Verify rider OTP",
        "description": "Verify the one-time password for the rider",
        "responses": {
          "default": {
            "description": ""
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "example": "any"
                  },
                  "otp": {
                    "example": "any"
                  },
                  "purpose": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/login-rider": {
      "post": {
        "tags": ["Auth", "Auth Rider"],
        "summary": "Rider login",
        "description": "Authenticate and receive a JWT for the rider",
        "responses": {
          "default": {
            "description": ""
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/refresh-rider-token": {
      "post": {
        "tags": ["Auth", "Auth Rider"],
        "summary": "Refresh rider token",
        "description": "Obtain a new JWT for the rider using a refresh token",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/auth/logout-rider": {
      "get": {
        "tags": ["Auth", "Auth Rider"],
        "summary": "Rider logout",
        "description": "Log out the currently authenticated rider",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/auth/forgot-rider-password": {
      "post": {
        "tags": ["Auth", "Auth Rider"],
        "summary": "Forgot rider password",
        "description": "Initiate the password reset process for the rider",
        "responses": {
          "default": {
            "description": ""
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "oldPassword": {
                    "example": "any"
                  },
                  "newPassword": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/reset-rider-password": {
      "post": {
        "tags": ["Auth", "Auth Rider"],
        "summary": "Reset rider password",
        "description": "Reset the rider password with a valid token",
        "responses": {
          "default": {
            "description": ""
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  },
                  "confirmPassword": {
                    "example": "any"
                  },
                  "resetToken": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/vendor-categories": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get vendor categories",
        "description": "Retrieve a list of available vendor categories and their keys.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/user/{id}": {
      "get": {
        "tags": ["User"],
        "summary": "Get user by ID",
        "description": "Retrieves a user by their ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/user/me": {
      "get": {
        "tags": ["User"],
        "summary": "Get current user profile",
        "description": "Retrieves the profile of the currently authenticated user.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": ["User"],
        "summary": "Update user profile",
        "description": "Updates the profile of the currently authenticated user.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "User profile data",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "fullName": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "phoneNumber": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "profileImageUrl": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "address": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "object"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/user/orders": {
      "get": {
        "tags": ["User", "User Orders"],
        "summary": "Get user orders",
        "description": "Retrieves a paginated list of orders for the currently authenticated user.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/vendors/{id}": {
      "get": {
        "tags": ["Vendor"],
        "summary": "Get vendor details",
        "description": "Fetches a single vendor by their ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/vendors/me": {
      "get": {
        "tags": ["Vendor"],
        "summary": "Get current vendor's profile",
        "description": "Fetches the profile of the currently authenticated vendor, including their products and orders.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": ["Vendor"],
        "summary": "Update current vendor's profile",
        "description": "Updates the profile of the currently authenticated vendor.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "Vendor profile data to update",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "businessName": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "phoneNumber": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "address": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "object"
                        }
                      }
                    },
                    "logoUrl": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/vendors/products": {
      "get": {
        "tags": ["Vendor"],
        "summary": "Get vendor's products with pagination",
        "description": "Fetches a paginated list of products for the currently authenticated vendor.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": ["Vendor", "Vendor Products"],
        "summary": "Create a new product",
        "description": "Creates a new product for the authenticated vendor.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "Product data to create",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/vendors/products/{id}": {
      "put": {
        "tags": ["Vendor", "Vendor Products"],
        "summary": "Update a product",
        "description": "Updates an existing product for the authenticated vendor.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Product ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "Product data to update",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": ["Vendor", "Vendor Products"],
        "summary": "Delete a product",
        "description": "Deletes a product for the authenticated vendor. Fails if the product has been ordered.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Product ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/vendors/products/{id}/variants/{variantId}": {
      "put": {
        "tags": ["Vendor", "Vendor Products"],
        "summary": "Update a product variant",
        "description": "Updates a specific product variant.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Product ID"
          },
          {
            "name": "variantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Variant ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "in": {
                    "example": "any"
                  },
                  "description": {
                    "example": "any"
                  },
                  "required": {
                    "example": "any"
                  },
                  "schema": {
                    "example": "any"
                  },
                  "select": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Vendor", "Vendor Products"],
        "summary": "Delete a product variant",
        "description": "Deletes a specific product variant. Fails if the variant has been ordered.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Product ID"
          },
          {
            "name": "variantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Variant ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/vendors/orders": {
      "get": {
        "tags": ["Vendor", "Vendor Orders"],
        "summary": "Get vendor's orders with pagination",
        "description": "Fetches a paginated list of orders for the currently authenticated vendor.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/vendors/orders/{orderId}": {
      "get": {
        "tags": ["Vendor", "Vendor Orders"],
        "summary": "Get a single order for the vendor",
        "description": "Fetches details of a specific order belonging to the currently authenticated vendor.",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Order ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/vendors/orders/{orderId}/status": {
      "patch": {
        "tags": ["Vendor", "Vendor Orders"],
        "summary": "Update order status",
        "description": "Updates the status of an order. Vendors can only set status to ACCEPTED, PREPARING, or CANCELLED.",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Order ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "in": {
                    "example": "any"
                  },
                  "description": {
                    "example": "any"
                  },
                  "required": {
                    "example": "any"
                  },
                  "schema": {
                    "example": "any"
                  },
                  "note": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vendors/": {
      "get": {
        "tags": ["Vendor"],
        "summary": "Get all vendors with pagination",
        "description": "Fetches a paginated list of all vendors.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/product/": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "price",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "open",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/product/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/order/": {
      "get": {
        "tags": ["Order"],
        "summary": "Get orders",
        "description": "Get all orders",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vendorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "post": {
        "tags": ["Order"],
        "summary": "Create order",
        "description": "Create a new order",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/order/{id}": {
      "get": {
        "tags": ["Order"],
        "summary": "Get order by ID",
        "description": "Get a single order by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/order/{id}/cancel": {
      "patch": {
        "tags": ["Order"],
        "summary": "Cancel order",
        "description": "Cancel an order",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "reason": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/login": {
      "post": {
        "tags": ["Admin"],
        "summary": "Admin login",
        "description": "Authenticate an admin user.",
        "responses": {
          "default": {
            "description": ""
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/vendors": {
      "get": {
        "tags": ["Admin"],
        "summary": "List all vendors",
        "description": "Retrieves a paginated list of all vendors.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/vendors/{vendorId}": {
      "get": {
        "tags": ["Admin"],
        "summary": "Get a specific vendor",
        "description": "Retrieves the details of a single vendor by their ID.",
        "parameters": [
          {
            "name": "vendorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/vendors/{vendorId}/approve": {
      "patch": {
        "tags": ["Admin"],
        "summary": "Approve a vendor",
        "description": "Approves a vendor, making them verified and active.",
        "parameters": [
          {
            "name": "vendorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/riders": {
      "get": {
        "tags": ["Admin"],
        "summary": "List all riders",
        "description": "Retrieves a paginated list of all riders.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/riders/{riderId}": {
      "get": {
        "tags": ["Admin"],
        "summary": "Get a specific rider",
        "description": "Retrieves the details of a single rider by their ID.",
        "parameters": [
          {
            "name": "riderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/riders/{riderId}/approve": {
      "patch": {
        "tags": ["Admin"],
        "summary": "Approve a rider",
        "description": "Approves a rider, making them verified and available.",
        "parameters": [
          {
            "name": "riderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/riders/{riderId}/suspend": {
      "patch": {
        "tags": ["Admin"],
        "summary": "Suspend a rider",
        "description": "Suspends a rider, making them unavailable.",
        "parameters": [
          {
            "name": "riderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/admin/orders/{orderId}/status": {
      "patch": {
        "tags": ["Admin"],
        "summary": "Update order status",
        "description": "Updates the status of a specific order.",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/reports": {
      "get": {
        "tags": ["Admin"],
        "summary": "Get system reports",
        "description": "Retrieves various system reports, such as counts and revenue.",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/rider/{id}": {
      "get": {
        "tags": ["Rider"],
        "summary": "Get a single rider by ID",
        "description": "Retrieves public information about a specific rider.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Rider ID"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/rider/me": {
      "get": {
        "tags": ["Rider"],
        "summary": "Get current rider profile",
        "description": "Retrieves the profile of the currently authenticated rider.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": ["Rider"],
        "summary": "Update rider profile",
        "description": "Updates the profile of the currently authenticated rider.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "Rider profile data",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "fullName": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "phoneNumber": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "profileImageUrl": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "vehicleType": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "licenseNumber": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "currentLocation": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "object"
                        }
                      }
                    },
                    "address": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "object"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/rider/orders": {
      "get": {
        "tags": ["Rider Orders"],
        "summary": "Get rider orders",
        "description": "Retrieves a list of orders for the rider. Can be filtered by status or to show claimable orders.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by order status",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "claimable",
            "in": "query",
            "description": "Set to true to get claimable orders",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/rider/orders/{id}": {
      "get": {
        "tags": ["Rider Orders"],
        "summary": "Get a specific order by ID",
        "description": "Retrieves details of a specific order assigned to the rider.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Order ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/rider/claim/{id}": {
      "post": {
        "tags": ["Rider Orders"],
        "summary": "Claim an order",
        "description": "Allows a rider to claim an available order for delivery.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Order ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/rider/decline/{id}": {
      "post": {
        "tags": ["Rider Orders"],
        "summary": "Decline an order",
        "description": "Allows a rider to decline an assigned order.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Order ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/rider/location": {
      "post": {
        "tags": ["Rider"],
        "summary": "Update rider location",
        "description": "Updates the real-time location of the rider.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "in": {
                    "example": "any"
                  },
                  "description": {
                    "example": "any"
                  },
                  "required": {
                    "example": "any"
                  },
                  "schema": {
                    "example": "any"
                  },
                  "longitude": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/rider/availability": {
      "patch": {
        "tags": ["Rider"],
        "summary": "Toggle rider availability",
        "description": "Sets the rider as available or unavailable for new orders.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "in": {
                    "example": "any"
                  },
                  "description": {
                    "example": "any"
                  },
                  "required": {
                    "example": "any"
                  },
                  "schema": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/rider/history": {
      "get": {
        "tags": ["Rider"],
        "summary": "Get delivery history",
        "description": "Retrieves the delivery history for the authenticated rider.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Start date for filtering",
            "required": false,
            "format": "date-time",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "End date for filtering",
            "required": false,
            "format": "date-time",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/rider/": {
      "get": {
        "tags": ["Rider"],
        "summary": "Get all riders",
        "description": "Retrieves a paginated list of all riders.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/payment/create-intent": {
      "post": {
        "tags": ["Payment"],
        "summary": "Create a payment intent",
        "description": "Creates a payment intent for an order.",
        "parameters": [],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "in": {
                    "example": "any"
                  },
                  "description": {
                    "example": "any"
                  },
                  "required": {
                    "example": "any"
                  },
                  "schema": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payment/confirm": {
      "post": {
        "tags": ["Payment"],
        "summary": "Confirm a payment",
        "description": "Confirms a payment using the payment reference.",
        "parameters": [],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "in": {
                    "example": "any"
                  },
                  "description": {
                    "example": "any"
                  },
                  "required": {
                    "example": "any"
                  },
                  "schema": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payment/webhook": {
      "post": {
        "tags": ["Payment"],
        "summary": "Handle Paystack webhook",
        "description": "Handles webhook events from Paystack.",
        "parameters": [
          {
            "name": "x-paystack-signature",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "req": {
                    "example": "any"
                  },
                  "data": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payment/{orderId}/status": {
      "get": {
        "tags": ["Payment"],
        "summary": "Check payment status",
        "description": "Checks the payment status for an order.",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Order ID"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/payment/{orderId}/refund": {
      "post": {
        "tags": ["Payment"],
        "summary": "Process a refund",
        "description": "Processes a refund for an order. Only admins can perform this action.",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Order ID"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "in": {
                    "example": "any"
                  },
                  "description": {
                    "example": "any"
                  },
                  "required": {
                    "example": "any"
                  },
                  "schema": {
                    "example": "any"
                  },
                  "amount": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "cookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "access_token",
        "description": "JWT Access Token stored in HttpOnly cookie. Automatically sent with requests after login."
      },
      "requestToken": {
        "type": "apiKey",
        "in": "cookie",
        "name": "request_token",
        "description": "Temporary request token used for request validation or refreshing JWT session."
      }
    },
    "schemas": {
      "Login": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "properties": {
            "type": "object",
            "properties": {
              "email": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "example": {
                    "type": "string",
                    "example": "admin@example.com"
                  }
                }
              },
              "password": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "example": {
                    "type": "string",
                    "example": "securepassword"
                  }
                }
              }
            }
          }
        }
      },
      "CreateUser": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "properties": {
            "type": "object",
            "properties": {
              "fullName": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "example": {
                    "type": "string",
                    "example": "Jane Doe"
                  }
                }
              },
              "email": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "example": {
                    "type": "string",
                    "example": "jane@example.com"
                  }
                }
              },
              "phoneNumber": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "example": {
                    "type": "string",
                    "example": "+2348012345678"
                  }
                }
              },
              "password": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "example": {
                    "type": "string",
                    "example": "securepassword"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "$schema": "http://json-schema.org/draft-07/schema#",
  "security": [
    {
      "cookieAuth": [],
      "requestToken": []
    }
  ]
}
